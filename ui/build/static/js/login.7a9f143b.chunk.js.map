{"version":3,"sources":["login/Header.js","login/App.js","login/index.js","images/logoPoem.png"],"names":["Header","props","style","display","alignItems","src","logo","alt","React","Component","App","class","id","overflowY","initialValues","email","password","onSubmit","values","setSubmitting","reqBody","username","axios","post","qs","stringify","headers","then","response","NotificationManager","success","window","location","href","catch","error","data","exception","setTimeout","console","log","validationSchema","Yup","shape","required","min","matches","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","htmlFor","name","type","placeholder","value","onChange","onBlur","className","disabled","marginLeft","ReactDOM","render","document","getElementById","module","exports"],"mappings":"6UAoBeA,E,YAhBd,WAAYC,GAAQ,qEACbA,I,sEAIN,OACC,gCACC,yBAAKC,MAAO,CAAEC,QAAS,OAAQC,WAAY,WAC1C,yBAAKC,IAAKC,IAAMC,IAAI,WACpB,+C,GAVgBC,IAAMC,W,8ECgGZC,EAxFH,kBACX,yBAAKC,MAAM,UACV,kBAAC,EAAD,MACA,yBAAKC,GAAG,UAAUV,MAAO,CAAEW,UAAW,SACrC,yBAAKF,MAAM,qBACV,kBAAC,IAAD,CACCG,cAAe,CAAEC,MAAO,GAAIC,SAAU,IACtCC,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cAMdC,EAAU,CACfC,SAAUH,EAAOH,MACjBC,SAAUE,EAAOF,SACjB,eAAgB,UAEjBM,IACEC,KAAK,SAAUC,IAAGC,UAAUL,GAXf,CACdM,QAAS,CACR,eAAgB,uCAUhBC,MAAK,SAACC,GACNC,sBAAoBC,QAAQ,kBAAmB,sBAAuB,KACtEX,GAAc,GACdY,OAAOC,SAASC,KAAO,OAEvBC,OAAM,SAACC,GACPN,sBAAoBM,MAAM,gBAAiBA,EAAMP,SAASQ,KAAKC,UAAW,KAC1ElB,GAAc,MAEhBmB,YAAW,WACVC,QAAQC,IAAI,aAActB,KACxB,MAEJuB,iBAAkBC,MAAaC,MAAM,CACpC5B,MAAO2B,MAAa3B,QAAQ6B,SAAS,YACrC5B,SAAU0B,MACRE,SAAS,yBACTC,IAAI,EAAG,sDACPC,QAAQ,cAAe,uCAGzB,SAAC7C,GAAW,IACJiB,EAAkFjB,EAAlFiB,OAAQ6B,EAA0E9C,EAA1E8C,QAASC,EAAiE/C,EAAjE+C,OAAQC,EAAyDhD,EAAzDgD,aAAcC,EAA2CjD,EAA3CiD,aAAcC,EAA6BlD,EAA7BkD,WAAYC,EAAiBnD,EAAjBmD,aAEzE,OACC,0BAAMnC,SAAUmC,GACf,2BAAOC,QAAQ,SAAf,SACA,2BACCzC,GAAG,QACH0C,KAAK,QACLC,KAAK,OACLC,YAAY,mBACZC,MAAOvC,EAAOH,MACd2C,SAAUR,EACVS,OAAQR,EACRS,UAAWZ,EAAOjC,OAASgC,EAAQhC,OAAS,UAE5CiC,EAAOjC,OAASgC,EAAQhC,OAAS,yBAAK6C,UAAU,kBAAkBZ,EAAOjC,OAC1E,2BAAOsC,QAAQ,YAAf,YACA,2BACCzC,GAAG,WACH0C,KAAK,WACLC,KAAK,WACLC,YAAY,sBACZC,MAAOvC,EAAOF,SACd0C,SAAUR,EACVS,OAAQR,EACRS,UAAWZ,EAAOhC,UAAY+B,EAAQ/B,UAAY,UAElDgC,EAAOhC,UAAY+B,EAAQ/B,UAC3B,yBAAK4C,UAAU,kBAAkBZ,EAAOhC,UAEzC,4BAAQuC,KAAK,SAASM,SAAUZ,GAAhC,SAGA,0BAAM/C,MAAO,CAAE4D,WAAY,QAA3B,aACW,uBAAG7B,KAAK,sBAAR,sBAMf,kBAAC,wBAAD,UCvFJ8B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCNjDC,EAAOC,QAAU,IAA0B,uC","file":"static/js/login.7a9f143b.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/logoPoem.png';\r\n\r\nclass Header extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<header>\r\n\t\t\t\t<div style={{ display: 'flex', alignItems: 'center' }}>\r\n\t\t\t\t\t<img src={logo} alt=\"Avatar\" />\r\n\t\t\t\t\t<h2>PoetInsta</h2>\r\n\t\t\t\t</div>\r\n\t\t\t</header>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from './Header';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport '../css/styles.css';\r\nimport axios from 'axios';\r\nimport qs from 'querystring';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\n\r\nconst App = () => (\r\n\t<div class=\"parent\">\r\n\t\t<Header />\r\n\t\t<div id=\"wrapper\" style={{ overflowY: 'auto' }}>\r\n\t\t\t<div class=\"registration-form\">\r\n\t\t\t\t<Formik\r\n\t\t\t\t\tinitialValues={{ email: '', password: '' }}\r\n\t\t\t\t\tonSubmit={(values, { setSubmitting }) => {\r\n\t\t\t\t\t\tconst config = {\r\n\t\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tconst reqBody = {\r\n\t\t\t\t\t\t\tusername: values.email,\r\n\t\t\t\t\t\t\tpassword: values.password,\r\n\t\t\t\t\t\t\t'login-submit': 'Log In',\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\taxios\r\n\t\t\t\t\t\t\t.post('/login', qs.stringify(reqBody), config)\r\n\t\t\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\t\t\tNotificationManager.success('Success message', 'Login successful!!!', 3000);\r\n\t\t\t\t\t\t\t\tsetSubmitting(false);\r\n\t\t\t\t\t\t\t\twindow.location.href = '/';\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\t\t\tNotificationManager.error('Error message', error.response.data.exception, 3000);\r\n\t\t\t\t\t\t\t\tsetSubmitting(false);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tconsole.log('Logging in', values);\r\n\t\t\t\t\t\t}, 500);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t\temail: Yup.string().email().required('Required'),\r\n\t\t\t\t\t\tpassword: Yup.string()\r\n\t\t\t\t\t\t\t.required('No password provided.')\r\n\t\t\t\t\t\t\t.min(8, 'Password is too short - should be 8 chars minimum.')\r\n\t\t\t\t\t\t\t.matches(/(?=.*[0-9])/, 'Password must contain a number.'),\r\n\t\t\t\t\t})}\r\n\t\t\t\t>\r\n\t\t\t\t\t{(props) => {\r\n\t\t\t\t\t\tconst { values, touched, errors, isSubmitting, handleChange, handleBlur, handleSubmit } = props;\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email\"\r\n\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\t\t\tclassName={errors.email && touched.email && 'error'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{errors.email && touched.email && <div className=\"input-feedback\">{errors.email}</div>}\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"password\">Password</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\t\t\tclassName={errors.password && touched.password && 'error'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{errors.password && touched.password && (\r\n\t\t\t\t\t\t\t\t\t<div className=\"input-feedback\">{errors.password}</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<button type=\"submit\" disabled={isSubmitting}>\r\n\t\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<span style={{ marginLeft: '5px' }}>\r\n\t\t\t\t\t\t\t\t\tNew user? <a href=\"/registration.html\">Register here</a>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}}\r\n\t\t\t\t</Formik>\r\n\t\t\t\t<NotificationContainer />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logoPoem.9494ff95.png\";"],"sourceRoot":""}